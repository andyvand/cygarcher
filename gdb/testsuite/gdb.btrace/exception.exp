# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2013 Free Software Foundation, Inc.
#
# Contributed by Intel Corp. <markus.t.metzger@intel.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# check for btrace support
if { [skip_btrace_tests] } { return -1 }

# start inferior
standard_testfile exception.cc
if [prepare_for_testing $testfile.exp $testfile $srcfile {c++ debug}] {
    return -1
}
if ![runto_main] {
    return -1
}

# we want to see the full trace for this test
gdb_test_no_output "set record function-call-history-size 0"

# set bp
set bp_1 [gdb_get_line_number "bp.1" $srcfile]
set bp_2 [gdb_get_line_number "bp.2" $srcfile]
gdb_breakpoint $bp_1
gdb_breakpoint $bp_2

# trace the code between thw two breakpoints
gdb_continue_to_breakpoint "cont to $bp_1" ".*$srcfile:$bp_1.*"
gdb_test_no_output "record btrace"
gdb_continue_to_breakpoint "cont to $bp_2" ".*$srcfile:$bp_2.*"

# show the flat branch trace
gdb_test "record function-call-history 0" "
0\ttest\\(\\)\r
1\tfoo\\(\\)\r
2\tbar\\(\\)\r
3\tbad\\(\\)\r
.*\r
\[0-9\]*\ttest\\(\\)\r
\[0-9\]*\tmain\\(\\)" "exception - flat"

# show the branch trace with calls indented
gdb_test "record function-call-history /c 0" "
0\t  test\\(\\)\r
1\t    foo\\(\\)\r
2\t      bar\\(\\)\r
3\t        bad\\(\\)\r
.*\r
\[0-9\]*\t  test\\(\\)\r
\[0-9\]*\tmain\\(\\)" "exception - calls indented"
